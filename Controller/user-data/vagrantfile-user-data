#cloud-config

coreos:

  update:
    group: alpha
    reboot-strategy: 'off'

  etcd2:
    name: controller
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://$public_ipv4:2380
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$public_ipv4:2380
    initial-cluster: controller=http://$public_ipv4:2380

  fleet:
    public-ip: $public_ipv4
    etcd_servers: http://172.17.8.20:2379
    metadata: role=etcd

  flannel:
    interface: $public_ipv4
    
  units:
  
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=-/usr/bin/docker load -i /home/core/images/all/flannel.tar
            ExecStartPre=-/bin/bash -c 'until /usr/bin/etcdctl set /coreos.com/network/config \'{ "Network": "10.1.0.0/16", "Backend": { "Type": "vxlan" } }\'; do echo "waiting for etcd..."; sleep 1; done'
             
    - name: docker.service
      drop-ins:
        - name: 50-insecure-registry.conf
          content: |
            [Service]
            Environment='DOCKER_OPTS=--insecure-registry="172.17.8.0/24"'
                    
    - name: docker-load.service
      content: |
        [Unit]
        Description=Docker Load Service
        Requires=flanneld.service docker.service
        After=flanneld.service docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/opt/bin/load-docker-images.sh
        TimeoutStartSec=0
        Restart=no

    - name: "docker-registry.service"
      content: |
        [Unit]
        Description=Docker Registry Service
        After=docker.service docker-load.service
        Requires=docker.service docker-load.service

        [Service]
        ExecStartPre=-/usr/bin/docker kill registry
        ExecStartPre=-/usr/bin/docker rm registry
        ExecStart=/usr/bin/docker run -p 5000:5000 -v /opt/ssl:/ssl -e REGISTRY_HTTP_TLS_CERTIFICATE=/ssl/certs/docker-registry.pem -e REGISTRY_HTTP_TLS_KEY=/ssl/priv/docker-registry-key.pem --name registry registry:2
        ExecStartPost=/usr/bin/sleep 10
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/node-provisioning
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/felix-agent
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/celix-agent

    - name: kubernetes-bootstrap.service
      command: start
      content: |
        [Unit]
        Description=Bootstraps the Kubernetes services as systemd units

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/coreos-cloudinit --from-file=/var/lib/coreos-vagrant/coreos-k8s.yaml

###EOF###
